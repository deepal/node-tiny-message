{"version":3,"sources":["../../test/index.test.js"],"names":["should","require","message","describe","it","done","successMessage","success","test","code","equal","data","have","property","errorMessage","error","Error","be","instanceOf"],"mappings":";;AAAA,IAAMA,SAASC,QAAQ,QAAR,CAAf;AACA,IAAMC,UAAUD,QAAQ,UAAR,CAAhB;;AAEAE,SAAS,oBAAT,EAA+B,YAAM;AACjCC,OAAG,sFAAH,EAA2F,UAACC,IAAD,EAAU;AACjG,YAAMC,iBAAiBJ,QAAQK,OAAR,CAAgB,MAAhB,EAAwB,EAACC,MAAM,GAAP,EAAxB,EAAqC,IAArC,CAAvB;AACAF,uBAAeG,IAAf,CAAoBT,MAApB,CAA2BU,KAA3B,CAAiC,IAAjC;AACAJ,uBAAeJ,OAAf,CAAuBF,MAAvB,CAA8BU,KAA9B,CAAoC,MAApC;AACAJ,uBAAeK,IAAf,CAAoBX,MAApB,CAA2BY,IAA3B,CAAgCC,QAAhC,CAAyC,MAAzC,EAAiD,GAAjD;AACAR;AACH,KAND;;AAQAD,OAAG,uFAAH,EAA4F,UAACC,IAAD,EAAU;AAClG,YAAMC,iBAAiBJ,QAAQK,OAAR,CAAgB,MAAhB,EAAwB,EAACC,MAAM,GAAP,EAAxB,CAAvB;AACAF,uBAAeG,IAAf,CAAoBT,MAApB,CAA2BU,KAA3B,CAAiC,CAAjC;AACAJ,uBAAeJ,OAAf,CAAuBF,MAAvB,CAA8BU,KAA9B,CAAoC,MAApC;AACAJ,uBAAeK,IAAf,CAAoBX,MAApB,CAA2BY,IAA3B,CAAgCC,QAAhC,CAAyC,MAAzC,EAAiD,GAAjD;AACAR;AACH,KAND;;AAQAD,OAAG,oFAAH,EAAyF,UAACC,IAAD,EAAU;AAC/F,YAAMS,eAAeZ,QAAQa,KAAR,CAAc,MAAd,EAAsB,IAAIC,KAAJ,CAAU,OAAV,CAAtB,EAA0C,IAA1C,CAArB;AACAF,qBAAaL,IAAb,CAAkBT,MAAlB,CAAyBU,KAAzB,CAA+B,IAA/B;AACAI,qBAAaZ,OAAb,CAAqBF,MAArB,CAA4BU,KAA5B,CAAkC,MAAlC;AACAI,qBAAaH,IAAb,CAAkBX,MAAlB,CAAyBiB,EAAzB,CAA4BC,UAA5B,CAAuCF,KAAvC;AACAF,qBAAaH,IAAb,CAAkBT,OAAlB,CAA0BF,MAA1B,CAAiCU,KAAjC,CAAuC,OAAvC;AACAL;AACH,KAPD;;AASAD,OAAG,qFAAH,EAA0F,UAACC,IAAD,EAAU;AAChG,YAAMS,eAAeZ,QAAQK,OAAR,CAAgB,MAAhB,EAAwB,IAAIS,KAAJ,CAAU,OAAV,CAAxB,CAArB;AACAF,qBAAaL,IAAb,CAAkBT,MAAlB,CAAyBU,KAAzB,CAA+B,CAA/B;AACAI,qBAAaZ,OAAb,CAAqBF,MAArB,CAA4BU,KAA5B,CAAkC,MAAlC;AACAI,qBAAaH,IAAb,CAAkBX,MAAlB,CAAyBiB,EAAzB,CAA4BC,UAA5B,CAAuCF,KAAvC;AACAF,qBAAaH,IAAb,CAAkBT,OAAlB,CAA0BF,MAA1B,CAAiCU,KAAjC,CAAuC,OAAvC;AACAL;AACH,KAPD;AAQH,CAlCD","file":"index.test.js","sourcesContent":["const should = require('should');\nconst message = require('../index');\n\ndescribe('message test suite', () => {\n    it('should create a success message with necessary details when all details are provided', (done) => {\n        const successMessage = message.success('test', {test: 123}, 1234);\n        successMessage.code.should.equal(1234);\n        successMessage.message.should.equal('test');\n        successMessage.data.should.have.property('test', 123);\n        done();\n    });\n\n    it('should create a success message with default values when all details are not provided', (done) => {\n        const successMessage = message.success('test', {test: 123});\n        successMessage.code.should.equal(0);\n        successMessage.message.should.equal('test');\n        successMessage.data.should.have.property('test', 123);\n        done();\n    });\n\n    it('should create a error message with necessary details when all details are provided', (done) => {\n        const errorMessage = message.error('test', new Error('error'), 1234);\n        errorMessage.code.should.equal(1234);\n        errorMessage.message.should.equal('test');\n        errorMessage.data.should.be.instanceOf(Error);\n        errorMessage.data.message.should.equal('error');\n        done();\n    });\n\n    it('should create a error message with default values when all details are not provided', (done) => {\n        const errorMessage = message.success('test', new Error('error'));\n        errorMessage.code.should.equal(0);\n        errorMessage.message.should.equal('test');\n        errorMessage.data.should.be.instanceOf(Error);\n        errorMessage.data.message.should.equal('error');\n        done();\n    });\n});"]}